" vim: foldmethod=marker:foldlevel=0
scriptencoding utf-8
" Plug {{{
call plug#begin('~/.vim/plugged')
Plug 'airblade/vim-gitgutter'
Plug 'arcticicestudio/nord-vim'
Plug 'editorconfig/editorconfig-vim'
Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' }
Plug 'itchyny/lightline.vim'
Plug 'jelera/vim-javascript-syntax'
Plug 'junegunn/fzf.vim'
Plug 'ntpeters/vim-better-whitespace'
Plug 'posva/vim-vue'
Plug 'raimon49/requirements.txt.vim', {'for': 'requirements'}
Plug 'w0rp/ale'
Plug '/usr/local/opt/fzf'
call plug#end()
" }}}
" General {{{
" Define that we are using a fast terminal
set ttyfast

" Enable autoread
set autoread

" Turn on filetype detection, indent scripts
" filetype plugins and syntax highlighting
filetype plugin indent on
" }}}
" Spell {{{
set spell spelllang=en_us
" }}}
" Theme: Nord {{{
let g:nord_comment_brightness = 20
let g:nord_underline = 1
" }}}
" Colors {{{
set termguicolors

syntax enable

silent! colorscheme nord
" }}}
" Editor layout {{{
" Enable visual autocomplete for command menu
set wildmenu

" Show absolute line numbers
set number

" Enable highlight the matching [{()}]
set showmatch

" Always display the status line
set laststatus=2
" }}}
" Editor settings {{{
" Show tab as chars
set list
set listchars=tab:>-

" Defines the search as incremental
set incsearch

" Defines the search as case insensitive
set ignorecase

" Defines the time to switch back to normal mode (ms)
set updatetime=10000

" Disable line wrap
set nowrap

" Show existing tab as 4 spaces
set tabstop=4

" Number of spaces when editing
set softtabstop=4

" Indents will have a width of 4
set shiftwidth=4

" On pressing tab, insert 4 spaces
set expandtab

" Make vim allow me to have more than one unsaved buffers
set hidden

" Configure the behavior of the backspace in insert mode
set backspace=indent,eol,start

" Start scroll when I'm 3 lines from top/bottom
set scrolloff=3
" }}}
" Backup and swap {{{
" Disable auto backup and swap file
set nobackup
set noswapfile
" }}}
" Autocmds {{{
augroup general
    " Remove previous autocmds from this group (avoid execute it twice)
    autocmd!

    " Remove white space before save
    autocmd BufEnter * EnableStripWhitespaceOnSave

    " Switch back to normal mode when inactive
    autocmd CursorHoldI * stopinsert
augroup end
" }}}
" Shortcuts {{{
" Open the spell dialog with to fix a typo
nnoremap <silent> <C-E> z=

" Open fzf to search into the open buffers
nnoremap <silent> <C-O> :Buffers<CR>

" Open fzf to search into the open buffers
nnoremap <silent> <C-P> :Files<CR>
" }}}
" Commands {{{
command! Pt setlocal spelllang=pt_br
command! En setlocal spelllang=en_us
" }}}
" Plugin: Ale {{{
" Define better error and warning icons
let g:ale_sign_warning = '▲'
let g:ale_sign_error = '✗'

" Configure ale to pass some args to flake8 (python linter)
let g:ale_python_flake8_args = '--ignore=E501,E999'

" Configure pylint to not show missing doctring
let g:ale_python_pylint_options = '--disable=missing-docstring'

" Add the linter name in the error message
let g:ale_echo_msg_format = '[%linter%] %s'
" }}}
" Plugin: Lightline {{{
" Define solarized as default colorscheme
let g:lightline = { 'colorscheme': 'nord' }
" }}}
