#!/usr/bin/env bash
# vim: ft=sh
IFS=$'\n\t'

BREW_PACKAGES=(
  "ansible" "bash" "bash-completion@2"
  "docker" "docker-compose"
  "git" "gnupg" "go"
  "nodejs" "pass" "pyenv" "pyenv-virtualenv"
  "python" "ruby" "ssh-copy-id"
  "stow" "tig" "tmux"
)
CASK_PACKAGES=(
  "docker" "firefox" "flux" "google-chrome"
  "iterm2" "java" "macdown" "macvim"
  "sequel-pro" "spotify"
  "sublime-text" "unrarx" "vagrant"
  "virtualbox" "vlc"
)
DOTFILES_DIR=~/dotfiles
PYTHON_VERSIONS=(
  "2.7.13"
  "3.4.6"
  "3.5.3"
  "3.6.2"
)
STOW_FILES=("bash" "git" "npm" "ssh" "tmux" "vim")

# Install Homebrew
if [ ! -f /usr/local/bin/brew ]; then
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

# Install Cask apps
for PACKAGE in ${CASK_PACKAGES[@]}; do
  INSTALLED=$(brew cask list -1 | grep "^${PACKAGE}\$" || true)
  if [ "$INSTALLED" != "$PACKAGE" ]; then
    brew cask install $PACKAGE
  fi
done

# Install Brew packages
for PACKAGE in ${BREW_PACKAGES[@]}; do
  INSTALLED=$(brew list -1 | grep "^${PACKAGE}\$" || true)
  if [ "$INSTALLED" != "$PACKAGE" ]; then
    brew install $PACKAGE
  fi
done

# Install vim replace MacOS defaults
INSTALLED=$(brew list -1 | grep "^vim\$" || true)
if [ "$INSTALLED" != "vim" ]; then
  brew install vim --with-override-system-vi --with-python3
fi

# Upgrade all installed packages
brew upgrade

# Add the new shell to the list of allowed shells
grep -q "/usr/local/bin/bash" /etc/shells
if [ $? -ne 0 ]; then
  sudo bash -c 'echo /usr/local/bin/bash >> /etc/shells'
fi

# change to the new shell
if [ "$SHELL" == "/bin/bash" ]; then
  chsh -s /usr/local/bin/bash
fi

# Clone the repository into the dotfiles dir
if [ ! -d $DOTFILES_DIR ]; then
  git clone https://github.com/diegoholiveira/dotfiles.git $DOTFILES_DIR
fi

# Configure iTerm2 to load my preferences from my dotfiles folder
defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "$DOTFILES_DIR"
defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true

# Remove the previous Bash profile
rm -f ~/.bash_profile ~/.bashrc

# Link the profiles to my versions
for APP in ${STOW_FILES[@]}; do
  stow --dir=${DOTFILES_DIR} ${APP}
done

. ~/.bashrc

for PYTHON_VERSION in ${PYTHON_VERSIONS[@]}; do
  pyenv install --skip-existing $PYTHON_VERSION
done

# Generates a ssh key for my user
if [ ! -f ~/.ssh/id_rsa ]; then
  ssh-keygen -t rsa -b 4096 -C "contato@diegoholiveira.com" -N "" -f ~/.ssh/id_rsa -q

  echo "------------------------------------------------------------------------------"
  echo "Final instructions"
  echo "------------------------------------------------------------------------------"
  echo ""
  echo "To secure your ssh key, please add a passphrase to it using the command above:"
  echo "    ssh-keygen -p -f ~/.ssh/id_rsa"
  echo ""
  echo "Before start using the computer, please restart the SO to reload all changes"
  echo "made by this script!"
  echo ""
fi
