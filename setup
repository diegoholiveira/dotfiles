#!/usr/bin/env bash
# vim: ft=sh
DOTFILES_DIR=~/dotfiles
NODE_PKGS="eslint eslint-plugin-jsx-a11y"
NODE_PKGS="${NODE_PKGS} eslint-plugin-react "
NODE_PKGS="${NODE_PKGS} eslint-plugin-import eslint-config-airbnb"
PHPCS_DIR=~/.composer/vendor/squizlabs/php_codesniffer
PHPCS_BIN="${PHPCS_DIR}/scripts/phpcs"
STOW_FILES="bash git tmux vim eslint"
VIM_PLUGINS="rust-lang/rust.vim pangloss/vim-javascript"
VIM_PLUGINS="${VIM_PLUGINS} altercation/vim-colors-solarized"
VIM_PLUGINS="${VIM_PLUGINS} airblade/vim-gitgutter kien/ctrlp.vim" 
VIM_PLUGINS="${VIM_PLUGINS} scrooloose/syntasti cerekwyatt/vim-scala"

# Define the platform
if [[ "${OSTYPE}" == "linux-gnu" ]]; then
  PLATFORM_SCRIPT="setup-fedora"
elif [[ "$OSTYPE" == "darwin"* ]]; then
  PLATFORM_SCRIPT="setup-mac"
else
  echo "Platform not supported!"
  exit 1
fi

# Prepare the platform
curl -sS https://raw.githubusercontent.com/diegoholiveira/dotfiles/master/${PLATFORM_SCRIPT} | bash

# Clean old Vim files
if [ -d ~/.vim ]; then
  # Remove the older vim folder
  rm -rf ~/.vim/{autoload,bundle}
fi

# Create vim folders to install plugins
mkdir -p ~/.vim/{autoload,bundle}

# Clone the repository into the dotfiles dir
if [ ! -d $DOTFILES_DIR ]; then
  git clone https://github.com/diegoholiveira/dotfiles.git $DOTFILES_DIR
fi

# Link the profiles to my versions
for APP in $STOW_FILES; do
  stow --dir=${DOTFILES_DIR} ${APP}
done

# Install Pathogen to manage vim plugins
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim

# Get my vim plugins
cd ~/.vim/bundle
for PLUGIN in $VIM_PLUGINS; do
  git clone "git://github.com/${PLUGIN}.git"
done
cd -

# Start using the new bash profile
. ~/.bash_profile

# Install global packages using NPM
for PKG in $NODE_PKGS; do
  npm -g ls ${PKG} > /dev/null 2>&1
  if [ "$?" == "1" ]; then
    npm -g install ${PKG}
  fi
done

# Install php code sniffer
if [ ! -d $PHPCS_DIR ]; then
  composer global require "squizlabs/php_codesniffer=@stable"
fi

# Creates an symlink to PHPCS_BIN in /usr/local/bin
if [ -e /usr/local/bin/phpcs ]; then
  ln -s $PHPCS_BIN /usr/local/bin/phpcs
fi

# Upgrade pip and setuptools
pip install --upgrade pip setuptools

# Generates a ssh key for my user
if [ ! -f ~/.ssh/id_rsa ]; then
  ssh-keygen -t rsa -b 4096 -C "contato@diegoholiveira.com" -N "" -f ~/.ssh/id_rsa -q
fi

echo "------------------------------------------------------------------------------"
echo "Final instructions"
echo "------------------------------------------------------------------------------"
echo ""
echo "To secure your ssh key, please add a passphrase to it using the command above:"
echo "    ssh-keygen -p -f ~/.ssh/id_rsa"
echo ""
echo "Before start using the computer, please restart the SO to reload all changes"
echo "made by this script!"
echo ""

